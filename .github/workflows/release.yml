name: Publish Images

on:
  workflow_run:
    workflows: [ Main ]
    types: [ completed ]
    branches: [ main ]


concurrency:
  group: "releases"
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GRADLE_OPTS: "-Dorg.gradle.console=plain -Dorg.gradle.caching=true -Dsonar.gradle.skipCompile=true"

jobs:
  build-docker-native:
    name: Package / Docker / native
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 0 indicates all history for all branches and tags.
      - name: Set up Gradle and Java
        uses: ./.github/gradle-action
      - name: Docker / Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Docker / Set up Buildx
        uses: docker/setup-buildx-action@v3
      # Used to run docker scout
      - name: Docker / Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker / Get image name
        id: dockerImageName
        run: echo "dockerImageName=visaoholandesa:$(date '+%Y%m%d.%H%M.%S')" >> "$GITHUB_OUTPUT"
      - name: Docker / Create Image
        run: docker image build -t ${{ steps.dockerImageName.outputs.dockerImageName }} .
      - name: Docker / List images
        run: docker images
      - name: Docker / Analyse image
        uses: docker/scout-action@v1
        continue-on-error: true
        with:
          command: quickview
          image: ${{ steps.dockerImageName.outputs.dockerImageName }}
          write-comment: false
          summary: true
      # Adapted from https://docs.docker.com/build/ci/github-actions/test-before-push/
      - name: Docker / Test Image
        # From `docker run --help`:
        #   -d, --detach          Run container in background and print container ID
        #   --rm                  Automatically remove the container when it exits
        #   -p, --publish list    Publish a container's port(s) to the host
        run: |
          containerId=$(docker run -d --rm --publish 8080:8080 ${{ steps.dockerImageName.outputs.dockerImageName }})
          wget --retry-connrefused --tries=20 -nv --wait=1 --spider http://localhost:8080/
          docker container logs "$containerId"
          docker container stop "$containerId"
      - name: Docker / Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker / Publish to GitHub Registry
        run: |
          git_tag=${{ github.ref_name }}
          last_git_sha=$(git log --pretty=format:'%h' HEAD -1)
          source_image_name=${{ steps.dockerImageName.outputs.dockerImageName }}

          echo "Using git tag $git_tag"
          echo "Using last git sha $last_git_sha"
          echo "Context's github.sha = ${{ github.sha }}"

          echo "Images to tag => visaoholandesa:latest"
          echo "Images to tag => visaoholandesa:$git_tag"
          echo "Images to tag => visaoholandesa:$last_git_sha"
          docker tag "$source_image_name" "visaoholandesa:latest"
          docker tag "$source_image_name" "visaoholandesa:$git_tag"
          docker tag "$source_image_name" "visaoholandesa:$last_git_sha"

          docker push --all-tags ${{ steps.dockerImageName.outputs.dockerImageName }}
